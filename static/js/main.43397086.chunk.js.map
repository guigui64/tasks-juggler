{"version":3,"sources":["store/tasks/types.ts","utils/constants.tsx","utils/data/database.ts","assets/images/juggler.svg","components/tooltippedbutton/tooltippedbutton.tsx","components/nav/actions.menu.tsx","store/settings/types.ts","components/nav/settings.form.tsx","store/settings/actions.ts","components/nav/navbar.tsx","components/overlays/database.dialogs.tsx","components/overlays/delete.alert.tsx","components/overlays/add-edit.dialog.tsx","components/overlays/project.dialogs.tsx","components/animation/animation.tsx","components/overlays/task.dialogs.tsx","components/tasks/task.card.tsx","components/tasks/task.group.tsx","store/tasks/actions.ts","components/app/app.tsx","store/window/actions.ts","store/window/types.ts","serviceWorker.ts","store/settings/reducer.ts","store/tasks/reducer.ts","store/window/reducer.ts","store/index.ts","index.tsx"],"names":["SELECT_TASK","DARK_THEME","Classes","DARK","ALL_PROJECTS","PNV_OK","validateProjectName","db","name","length","valid","reason","projects","find","p","toUpperCase","TTV_OK","validateTaskTitle","title","projectId","tasks","filter","t","some","id","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref","svgRef","props","x","y","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","connect","state","smallScreen","window","text","showButtonText","position","disabled","buttonProps","content","ActionsMenu","openAddProjDialog","openEditProjDialog","selectedProject","openDeleteProjAlert","dumpDataBase","loadDataBase","Divider","Item","icon","onClick","intent","SET_THEME","theme","settings","showOrphan","dispatch","setTheme","type","payload","setShowOrphan","setShowButtonText","padding","margin","alignIndicator","Alignment","RIGHT","checked","onChange","newTheme","localStorage","setItem","prefix","newShowOrphan","String","newShowButtonText","setSelectedProject","dataBase","desc","useState","logoClass","setLogoClass","logoAnimation","logoAnimationIdx","setLogoAnimationIdx","Group","align","LEFT","Heading","fontWeight","display","alignItems","onMouseEnter","onMouseLeave","className","animationIterationCount","height","fill","marginLeft","large","selectedTabId","map","Tab","Position","BOTTOM","minimal","fileSaver","require","fileReader","FileReader","DumpDataBaseDialog","isOpen","onClose","dump","onClipboard","DIALOG_BODY","readOnly","width","minHeight","defaultValue","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","Intent","PRIMARY","document","getElementById","select","execCommand","blob","Blob","saveAs","LoadDataBaseDialog","onLoad","input","setInput","file","setFile","loadAndClose","autoFocus","marginBottom","value","event","buttonText","inputProps","accept","multiple","e","currentTarget","hie","onload","result","readAsText","files","DeleteAlert","deletionTargetName","alertProps","cancelButtonText","DANGER","canEscapeKeyCancel","canOutsideClickCancel","AddEditDialog","what","action","dialogProps","charAt","slice","canOutsideClickClose","children","AddEditProjectDialog","errorMessage","onNameChange","onDescChange","helperText","label","labelFor","labelInfo","inline","placeholder","AddProjectDialog","add","validateName","setName","setDesc","setDisabled","setErrorMessage","EditProjectDialog","project","edit","useEffect","update","newName","newDesc","Animation","customClass","customStyle","enteringAnimation","enteredAnimation","exitingAnimation","exitedAnimation","transitionProps","classFrom","ENTERING","ENTERED","EXITING","EXITED","Transition","AddEditTaskDialog","taskTitle","onTitleChange","durationEnabled","setDurationEnabled","duration","setDuration","options","in","timeout","unmountOnExit","min","max","stepSize","majorStepSize","onValueChange","v","AddTaskDialog","validateTitle","selectedProjectId","setTitle","TaskCard","selected","interactive","elevation","Elevation","TWO","border","selectedIds","selectTask","unselectTask","show","openAddTaskDialog","openDeleteTaskAlert","filteredTasks","marginRight","TOP","includes","forEach","every","marginTop","gridTemplateColumns","gridGap","task","selectedTasks","unselectAll","setSmallScreen","localDB","toaster","deleteProjAlertOpen","addProjDialogOpen","editProjDialogOpen","deleteTaskAlertOpen","addTaskDialogOpen","dumpDBDialogOpen","openDumpDBDialog","loadDBDialogOpen","openLoadDBDialog","localDBStr","getItem","JSON","parse","error","initialProjectId","initialTaskId","createFakeDataBase","setDataBase","updateDataBase","stringify","deleteProject","ReactDOM","createPortal","addToast","message","keydownListener","keyCode","ESCAPE","addEventListener","removeEventListener","matchMedia","addListener","matches","reduce","c","Math","push","confirmButtonText","onCancel","onConfirm","taskId","SUCCESS","newDatabase","WARNING","Array","isArray","projectsIds","undefined","tasksIds","validateDB","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","INITIAL_STATE","settingsReducer","tasksReducer","concat","innerWidth","windowReducer","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","Toaster","create","render","URL","process","href","origin","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.43397086.chunk.js","sourcesContent":["import { Action } from 'redux';\n\n// Tasks level state object\nexport type TasksState = {\n\tselected: number[];\n};\n\nexport const SELECT_TASK = '@@settings/SELECT_TASK';\nexport const UNSELECT_TASK = '@@settings/UNSELECT_TASK';\nexport const UNSELECT_ALL = '@@settings/UNSELECT_ALL';\n\nexport interface SelectTaskAction extends Action {\n\ttype: typeof SELECT_TASK;\n\tpayload: number;\n}\n\nexport interface UnselectTaskAction extends Action {\n\ttype: typeof UNSELECT_TASK;\n\tpayload: number;\n}\n\nexport interface UnselectAllAction extends Action {\n\ttype: typeof UNSELECT_ALL;\n}\n\nexport type TasksActionTypes =\n\t| SelectTaskAction\n\t| UnselectTaskAction\n\t| UnselectAllAction;\n","import { Classes } from '@blueprintjs/core';\n\n// Blueprint\nexport const DARK_THEME = Classes.DARK;\nexport const LIGHT_THEME = '';\n\n// Local storage keys\nconst prefix = 'tasks-juggler-';\nexport const THEME_STORAGE_KEY = prefix + 'theme';\nexport const SHOW_ORPHAN_STORAGE_KEY = prefix + 'show-orphan';\nexport const SHOW_BUTTON_TEXT_STORAGE_KEY = prefix + 'show-button-text';\nexport const DATABASE_STORAGE_KEY = prefix + 'database';\n\n// Projects\nexport const NO_PROJECT: number = -1;\nexport const ALL_PROJECTS: number = -2;\n\n// Tasks\nexport const TASK_DURATION_NONE: number = 0;\n\n// Other\nexport const MIN_NAME_SIZE: number = 3;\n","import { MIN_NAME_SIZE, NO_PROJECT } from '../constants';\nimport { DataBase, Project } from '../types/types';\n\nexport const createFakeDataBase: () => DataBase = () => {\n\tlet initialProjectId = 0;\n\tlet initialTaskId = 0;\n\tconst initialDataBase: DataBase = {\n\t\tprojects: [\n\t\t\t{ name: 'Toto', desc: 'toto project', id: initialProjectId++ },\n\t\t\t{ name: 'Titi', desc: 'titi project', id: initialProjectId++ }\n\t\t],\n\t\ttasks: [\n\t\t\t{\n\t\t\t\ttitle: 'ZombieTask',\n\t\t\t\tdesc: 'I have no project...',\n\t\t\t\tid: initialTaskId++,\n\t\t\t\tprojectId: NO_PROJECT,\n\t\t\t\tduration: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'TotoTask1',\n\t\t\t\tdesc: 'task 1 of toto project',\n\t\t\t\tid: initialTaskId++,\n\t\t\t\tprojectId: 0,\n\t\t\t\tduration: 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'TotoTask2',\n\t\t\t\tdesc: 'task 2 of toto project',\n\t\t\t\tid: initialTaskId++,\n\t\t\t\tprojectId: 0,\n\t\t\t\tduration: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'TitiTask',\n\t\t\t\tdesc: 'task 1 of titi project',\n\t\t\t\tid: initialTaskId++,\n\t\t\t\tprojectId: 1,\n\t\t\t\tduration: 1\n\t\t\t}\n\t\t]\n\t};\n\treturn initialDataBase;\n};\n\nexport const validateDB: (\n\tdb: any\n) => { valid: boolean; reason?: string } = db => {\n\tif (typeof db !== 'object' || Array.isArray(db)) {\n\t\treturn { valid: false, reason: 'Imported DB is not an object' };\n\t}\n\tlet projectsIds: number[] = [];\n\tif (db.projects) {\n\t\tif (Array.isArray(db.projects)) {\n\t\t\tif (\n\t\t\t\t!(db.projects as any[]).every(p => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tp.name !== undefined &&\n\t\t\t\t\t\ttypeof p.name === 'string' &&\n\t\t\t\t\t\tp.desc !== undefined &&\n\t\t\t\t\t\ttypeof p.desc === 'string' &&\n\t\t\t\t\t\tp.id !== undefined &&\n\t\t\t\t\t\ttypeof p.id === 'number'\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!projectsIds.includes(p.id)) {\n\t\t\t\t\t\t\tprojectsIds.push(p.id);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t})\n\t\t\t) {\n\t\t\t\treturn {\n\t\t\t\t\tvalid: false,\n\t\t\t\t\treason: 'Imported DB projects are not correctly formed'\n\t\t\t\t};\n\t\t\t}\n\t\t} else {\n\t\t\treturn { valid: false, reason: \"Imported DB 'projects' is not an array\" };\n\t\t}\n\t} else {\n\t\treturn { valid: false, reason: \"Imported DB has no 'projects' child\" };\n\t}\n\tprojectsIds.push(NO_PROJECT);\n\tlet tasksIds: number[] = [];\n\tif (db.tasks) {\n\t\tif (Array.isArray(db.tasks)) {\n\t\t\tif (\n\t\t\t\t!(db.tasks as any[]).every(t => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tt.title !== undefined &&\n\t\t\t\t\t\ttypeof t.title === 'string' &&\n\t\t\t\t\t\tt.desc !== undefined &&\n\t\t\t\t\t\ttypeof t.desc === 'string' &&\n\t\t\t\t\t\tt.id !== undefined &&\n\t\t\t\t\t\ttypeof t.id === 'number' &&\n\t\t\t\t\t\tt.projectId !== undefined &&\n\t\t\t\t\t\ttypeof t.projectId === 'number' &&\n\t\t\t\t\t\tt.duration !== undefined &&\n\t\t\t\t\t\ttypeof t.duration === 'number'\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (tasksIds.includes(t.id)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttasksIds.push(t.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!projectsIds.includes(t.projectId)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t})\n\t\t\t) {\n\t\t\t\treturn {\n\t\t\t\t\tvalid: false,\n\t\t\t\t\treason: 'Imported DB tasks are not correctly formed'\n\t\t\t\t};\n\t\t\t}\n\t\t} else {\n\t\t\treturn { valid: false, reason: \"Imported DB 'tasks' is not an array\" };\n\t\t}\n\t} else {\n\t\treturn { valid: false, reason: \"Imported DB has no 'tasks' child\" };\n\t}\n\treturn { valid: true };\n};\n\nexport const getNextProjectId: (db: DataBase) => number = db => {\n\treturn db.projects.map(p => p.id).reduce((p, c) => Math.max(p, c)) + 1;\n};\n\nexport const getNextTaskId: (db: DataBase) => number = db => {\n\treturn db.tasks.map(t => t.id).reduce((p, c) => Math.max(p, c)) + 1;\n};\n\nexport const PNV_NOK_TOO_SHORT = 'ProjectNameValidity::NOK_TOO_SHORT';\nexport const PNV_NOK_NAME_TAKEN = 'ProjectNameValidity::NOK_NAME_TAKEN';\nexport const PNV_NOK_OTHER = 'ProjectNameValidity::NOK_OTHER';\nexport const PNV_OK = 'ProjectNameValidity::OK';\nexport type ProjectNameValidity =\n\t| typeof PNV_NOK_TOO_SHORT\n\t| typeof PNV_NOK_NAME_TAKEN\n\t| typeof PNV_NOK_OTHER\n\t| typeof PNV_OK;\n\nexport const validateProjectName = (db: DataBase) => (\n\tname: string\n): { valid: ProjectNameValidity; reason?: string } => {\n\tif (name.length < MIN_NAME_SIZE) {\n\t\treturn { valid: PNV_NOK_TOO_SHORT, reason: 'Too short' };\n\t}\n\tif (db.projects.find(p => p.name.toUpperCase() === name.toUpperCase())) {\n\t\treturn {\n\t\t\tvalid: PNV_NOK_NAME_TAKEN,\n\t\t\treason: `Project with name ${name} already exists`\n\t\t};\n\t}\n\treturn { valid: PNV_OK };\n};\n\nexport const TTV_NOK_TOO_SHORT = 'TaskTitleValidity::NOK_TOO_SHORT';\nexport const TTV_NOK_TITLE_TAKEN = 'TaskTitleValidity::NOK_TITLE_TAKEN';\nexport const TTV_NOK_OTHER = 'TaskTitleValidity::NOK_OTHER';\nexport const TTV_OK = 'TaskTitleValidity::OK';\nexport type TaskTitleValidity =\n\t| typeof TTV_NOK_TOO_SHORT\n\t| typeof TTV_NOK_TITLE_TAKEN\n\t| typeof TTV_NOK_OTHER\n\t| typeof TTV_OK;\n\nexport const validateTaskTitle = (db: DataBase) => (\n\ttitle: string,\n\tprojectId: number\n): { valid: TaskTitleValidity; reason?: string } => {\n\tif (title.length < MIN_NAME_SIZE) {\n\t\treturn { valid: TTV_NOK_TOO_SHORT, reason: 'Too short' };\n\t}\n\tif (\n\t\tdb.tasks.filter(t => t.projectId === projectId).some(t => t.title === title)\n\t) {\n\t\treturn {\n\t\t\tvalid: TTV_NOK_TITLE_TAKEN,\n\t\t\treason: `Task with title ${title} already exists in project ${\n\t\t\t\tdb.projects.find(p => p.id === projectId)!.name\n\t\t\t}`\n\t\t};\n\t}\n\treturn { valid: TTV_OK };\n};\n\nexport const getProject = (db: DataBase) => (\n\tid: number\n): Project | undefined => {\n\treturn db.projects.find(p => p.id === id);\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M256,405.993c-5.52,0-10,4.48-10,10c0,5.52,4.48,10,10,10c5.52,0,10-4.48,10-10 C265.999,410.472,261.52,405.993,256,405.993z\"\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M277.206,263.064c-3.907-3.902-10.239-3.899-14.141,0.009c-1.878,1.88-4.387,2.916-7.064,2.916 c-2.677,0-5.186-1.036-7.064-2.916c-3.903-3.908-10.234-3.912-14.141-0.009c-3.908,3.903-3.912,10.234-0.009,14.141 c5.656,5.664,13.189,8.783,21.213,8.783c8.024,0,15.558-3.119,21.215-8.783C281.118,273.299,281.113,266.967,277.206,263.064z\"\n})));\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M256,0.011c-22.055,0-39.998,17.943-39.998,39.998S233.945,80.007,256,80.007c22.055,0,39.998-17.943,39.998-39.998 S278.055,0.011,256,0.011z M256,60.008c-11.027,0-19.999-8.972-19.999-19.999c0-11.028,8.972-19.999,19.999-19.999 c11.028,0,19.999,8.972,19.999,19.999C275.999,51.037,267.027,60.008,256,60.008z\"\n})));\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M136.005,40.009c-22.055,0-39.998,17.943-39.998,39.998c0,22.055,17.943,39.998,39.998,39.998 s39.998-17.943,39.998-39.998C176.003,57.952,158.06,40.009,136.005,40.009z M136.005,100.006 c-11.028,0-19.999-8.972-19.999-19.999c0-11.027,8.972-19.999,19.999-19.999s19.999,8.972,19.999,19.999 C156.004,91.035,147.033,100.006,136.005,100.006z\"\n})));\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M40.01,137.005c-22.055,0-39.998,17.943-39.998,39.998s17.943,39.998,39.998,39.998c22.055,0,39.998-17.943,39.998-39.998 S62.064,137.005,40.01,137.005z M40.01,197.002c-11.028,0-19.999-8.972-19.999-19.999s8.972-19.999,19.999-19.999 c11.027,0,19.999,8.972,19.999,19.999S51.037,197.002,40.01,197.002z\"\n})));\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M375.994,40.009c-22.055,0-39.998,17.943-39.998,39.998c0,22.055,17.943,39.998,39.998,39.998 s39.998-17.943,39.998-39.998C415.993,57.952,398.049,40.009,375.994,40.009z M375.994,100.006 c-11.028,0-19.999-8.972-19.999-19.999c0-11.027,8.972-19.999,19.999-19.999c11.028,0,19.999,8.972,19.999,19.999 C395.993,91.035,387.022,100.006,375.994,100.006z\"\n})));\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M471.99,137.005c-22.055,0-39.998,17.943-39.998,39.998s17.943,39.998,39.998,39.998 c22.055,0,39.998-17.943,39.998-39.998S494.045,137.005,471.99,137.005z M471.99,197.002c-11.027,0-19.999-8.972-19.999-19.999 s8.972-19.999,19.999-19.999c11.028,0,19.999,8.972,19.999,19.999S483.018,197.002,471.99,197.002z\"\n})));\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M505.269,327.811c-12.26-18.398-37.078-23.37-55.471-11.091c-0.07,0.047-0.139,0.094-0.208,0.143l-48.431,34.123 l-101.276-40.509c15.91-12.842,26.114-32.486,26.114-54.477c0-38.596-31.401-69.997-69.997-69.997 c-38.596,0-69.997,31.401-69.997,69.997c0,21.99,10.202,41.633,26.111,54.475l-101.274,40.511l-48.429-34.121 c-0.072-0.051-0.145-0.101-0.218-0.149c-18.435-12.279-43.225-7.289-55.464,11.096c-12.234,18.359-7.325,43.113,11.003,55.399 l65.918,45.943c0.058,0.04,0.116,0.08,0.174,0.119c11.174,7.443,25.017,8.664,37.045,3.852l45.134-18.053v86.915 c0,5.523,4.477,10,10,10h159.993c5.523,0,10-4.477,10-10v-86.915l45.113,18.045c11.718,4.719,25.656,3.757,37.067-3.844 c0.058-0.039,0.116-0.078,0.174-0.119l65.917-45.942C512.596,370.927,517.506,346.172,505.269,327.811z M206.002,255.999 c0-27.569,22.429-49.998,49.998-49.998c27.569,0,49.998,22.429,49.998,49.998c0,27.569-22.429,49.998-49.998,49.998 C228.431,305.997,206.002,283.569,206.002,255.999z M277.319,325.996L256,357.97l-21.319-31.974H277.319z M29.088,366.75 c-0.057-0.04-0.114-0.079-0.172-0.117c-9.196-6.129-11.68-18.523-5.541-27.736c6.088-9.145,18.401-11.677,27.632-5.604 l5.906,4.161l-23.98,31.976L29.088,366.75z M417.011,412.681c-5.558,3.665-12.463,4.288-18.453,1.876l-58.847-23.539 c-3.082-1.233-6.573-0.856-9.32,1.004c-2.747,1.86-4.394,4.962-4.394,8.281v91.686h-59.997V455.99c0-5.523-4.477-10-10-10 c-5.523,0-10,4.477-10,10v35.998h-59.997v-91.686c0-3.318-1.646-6.42-4.394-8.281c-2.748-1.861-6.239-2.237-9.32-1.004 l-58.847,23.539c-6.086,2.434-12.954,1.75-18.454-1.876L49.35,380.873l23.918-31.895l30.491,21.482 c2.765,1.948,6.329,2.366,9.472,1.109l100.892-40.355l33.557,50.328c1.854,2.781,4.977,4.452,8.32,4.452 c3.343,0,6.465-1.671,8.32-4.452l33.56-50.33l100.891,40.357c3.142,1.257,6.707,0.839,9.473-1.11l26.968-19l20.535,34.225 L417.011,412.681z M483.085,366.633c-0.059,0.039-0.116,0.078-0.173,0.118l-10.719,7.472l-20.586-34.314l9.391-6.616 c9.17-6.052,21.514-3.57,27.632,5.609C494.758,348.101,492.288,360.5,483.085,366.633z\"\n})));\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref17 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref18 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref19 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref20 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref21 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref22 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref23 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref24 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgJuggler = function SvgJuggler(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 511.999 511.999\",\n    style: {\n      enableBackground: \"new 0 0 511.999 511.999\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17, _ref18, _ref19, _ref20, _ref21, _ref22, _ref23, _ref24);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgJuggler, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/juggler.a8913439.svg\";\nexport { ForwardRef as ReactComponent };","import { Button, IButtonProps, Position, Tooltip } from '@blueprintjs/core';\nimport React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../store';\n\ntype TooltippedButtonStateProps = {\n\tsmallScreen: boolean;\n};\n\ntype TooltippedButtonProps = {\n\ttext: string;\n\tshowButtonText: boolean;\n\tdisabled?: boolean;\n\tposition?: Position;\n\tbuttonProps?: IButtonProps;\n} & TooltippedButtonStateProps;\n\nconst TooltippedButton: FC<TooltippedButtonProps> = ({\n\ttext,\n\tshowButtonText,\n\tposition,\n\tdisabled = false,\n\tsmallScreen,\n\tbuttonProps\n}) => (\n\t<Tooltip\n\t\tcontent={text}\n\t\tdisabled={disabled || showButtonText || smallScreen}\n\t\tposition={position}\n\t>\n\t\t<Button\n\t\t\ttext={showButtonText ? text : ''}\n\t\t\tdisabled={disabled}\n\t\t\t{...buttonProps}\n\t\t/>\n\t</Tooltip>\n);\n\nconst mapStateToProps = (state: AppState): TooltippedButtonStateProps => ({\n\tsmallScreen: state.window.smallScreen\n});\n\nexport default connect(mapStateToProps)(TooltippedButton);\n","import { Menu } from '@blueprintjs/core';\nimport React, { FC } from 'react';\nimport { ALL_PROJECTS } from '../../utils/constants';\n\ntype ActionsMenuProps = {\n\topenAddProjDialog: (b: boolean) => void;\n\topenEditProjDialog: (b: boolean) => void;\n\tselectedProject: number;\n\topenDeleteProjAlert: (b: boolean) => void;\n\tdumpDataBase: () => void;\n\tloadDataBase: () => void;\n};\n\nexport const ActionsMenu: FC<ActionsMenuProps> = ({\n\topenAddProjDialog,\n\topenEditProjDialog,\n\tselectedProject,\n\topenDeleteProjAlert,\n\tdumpDataBase,\n\tloadDataBase\n}) => (\n\t<Menu>\n\t\t<Menu.Divider title='Projects' />\n\t\t<Menu.Item\n\t\t\ttext='Add project'\n\t\t\ticon='add'\n\t\t\tonClick={() => openAddProjDialog(true)}\n\t\t/>\n\t\t<Menu.Item\n\t\t\ttext='Edit project'\n\t\t\ticon='edit'\n\t\t\tdisabled={selectedProject === ALL_PROJECTS}\n\t\t\tonClick={() => openEditProjDialog(true)}\n\t\t/>\n\t\t<Menu.Item\n\t\t\ttext='Delete project'\n\t\t\ticon='trash'\n\t\t\tintent='danger'\n\t\t\tdisabled={selectedProject === ALL_PROJECTS}\n\t\t\tonClick={() => openDeleteProjAlert(true)}\n\t\t/>\n\t\t<Menu.Divider title='Database' />\n\t\t<Menu.Item text='Dump database' icon='floppy-disk' onClick={dumpDataBase} />\n\t\t<Menu.Item text='Load database' icon='database' onClick={loadDataBase} />\n\t</Menu>\n);\n","import { Action } from 'redux';\n\n// Settings level state object\nexport type SettingsState = {\n\ttheme: string;\n\tshowOrphan: boolean;\n\tshowButtonText: boolean;\n};\n\nexport const SET_THEME = '@@settings/SET_THEME';\nexport const SET_SHOW_ORPHAN = '@@settings/SET_SHOW_ORPHAN';\nexport const SET_SHOW_BUTTON_TEXT = '@@settings/SET_SHOW_BUTTON_TEXT';\n\nexport interface SetThemeAction extends Action {\n\ttype: typeof SET_THEME;\n\tpayload: string;\n}\n\nexport interface SetShowOrphanAction extends Action {\n\ttype: typeof SET_SHOW_ORPHAN;\n\tpayload: boolean;\n}\n\nexport interface SetShowButtonTextAction extends Action {\n\ttype: typeof SET_SHOW_BUTTON_TEXT;\n\tpayload: boolean;\n}\n\nexport type SettingsActionTypes =\n\t| SetThemeAction\n\t| SetShowOrphanAction\n\t| SetShowButtonTextAction;\n","import { Alignment, FormGroup, Switch } from '@blueprintjs/core';\nimport React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { AppState } from '../../store';\nimport {\n\tsetShowButtonText,\n\tsetShowOrphan,\n\tsetTheme\n} from '../../store/settings/actions';\nimport { SettingsActionTypes } from '../../store/settings/types';\nimport {\n\tDARK_THEME,\n\tLIGHT_THEME,\n\tSHOW_BUTTON_TEXT_STORAGE_KEY,\n\tSHOW_ORPHAN_STORAGE_KEY,\n\tTHEME_STORAGE_KEY\n} from '../../utils/constants';\n\ntype SettingsFormStateProps = {\n\ttheme: string;\n\tshowOrphan: boolean;\n\tshowButtonText: boolean;\n};\ntype SettingsFormDispatchProps = {\n\tsetTheme: (theme: string) => void;\n\tsetShowOrphan: (showOrphan: boolean) => void;\n\tsetShowButtonText: (showButtonText: boolean) => void;\n};\ntype SettingsFormProps = SettingsFormStateProps & SettingsFormDispatchProps;\n\nconst SettingsForm: FC<SettingsFormProps> = ({\n\ttheme,\n\tsetTheme,\n\tshowOrphan,\n\tshowButtonText,\n\tsetShowOrphan,\n\tsetShowButtonText\n}) => (\n\t<FormGroup\n\t\tstyle={{\n\t\t\tpadding: '10px',\n\t\t\tmargin: '0'\n\t\t}}\n\t>\n\t\t<Switch\n\t\t\talignIndicator={Alignment.RIGHT}\n\t\t\tchecked={theme === DARK_THEME}\n\t\t\tonChange={() => {\n\t\t\t\tconst newTheme: string =\n\t\t\t\t\ttheme === LIGHT_THEME ? DARK_THEME : LIGHT_THEME;\n\t\t\t\tsetTheme(newTheme);\n\t\t\t\tlocalStorage.setItem(THEME_STORAGE_KEY, newTheme);\n\t\t\t}}\n\t\t>\n\t\t\t{(theme === LIGHT_THEME ? 'Dark' : 'Light') + ' theme'}\n\t\t</Switch>\n\t\t<Switch\n\t\t\talignIndicator={Alignment.RIGHT}\n\t\t\tchecked={showOrphan}\n\t\t\tonChange={() => {\n\t\t\t\tconst newShowOrphan: boolean = !showOrphan;\n\t\t\t\tsetShowOrphan(newShowOrphan);\n\t\t\t\tlocalStorage.setItem(SHOW_ORPHAN_STORAGE_KEY, String(newShowOrphan));\n\t\t\t}}\n\t\t>\n\t\t\t{'Show orphan tasks'}\n\t\t</Switch>\n\t\t<Switch\n\t\t\talignIndicator={Alignment.RIGHT}\n\t\t\tchecked={showButtonText}\n\t\t\tonChange={() => {\n\t\t\t\tconst newShowButtonText: boolean = !showButtonText;\n\t\t\t\tsetShowButtonText(newShowButtonText);\n\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\tSHOW_BUTTON_TEXT_STORAGE_KEY,\n\t\t\t\t\tString(newShowButtonText)\n\t\t\t\t);\n\t\t\t}}\n\t\t>\n\t\t\t{'Show buttons text'}\n\t\t</Switch>\n\t</FormGroup>\n);\n\nconst mapStateToProps = (state: AppState): SettingsFormStateProps => ({\n\ttheme: state.settings.theme,\n\tshowOrphan: state.settings.showOrphan,\n\tshowButtonText: state.settings.showButtonText\n});\n\nconst mapDispatchToProps = (\n\tdispatch: Dispatch<SettingsActionTypes>\n): SettingsFormDispatchProps => ({\n\tsetTheme: (theme: string) => dispatch(setTheme(theme)),\n\tsetShowOrphan: (showOrphan: boolean) => dispatch(setShowOrphan(showOrphan)),\n\tsetShowButtonText: (showButtonText: boolean) =>\n\t\tdispatch(setShowButtonText(showButtonText))\n});\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(SettingsForm);\n","import { ActionCreator } from 'redux';\nimport {\n\tSetShowButtonTextAction,\n\tSetShowOrphanAction,\n\tSetThemeAction,\n\tSET_SHOW_BUTTON_TEXT,\n\tSET_SHOW_ORPHAN,\n\tSET_THEME\n} from './types';\n\n// Type these action creators with `: ActionCreator<ActionTypeYouWantToPass>`.\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly.\n\nexport const setTheme: ActionCreator<SetThemeAction> = (theme: string) => ({\n\ttype: SET_THEME,\n\tpayload: theme\n});\n\nexport const setShowOrphan: ActionCreator<SetShowOrphanAction> = (\n\tshowOrphan: boolean\n) => ({\n\ttype: SET_SHOW_ORPHAN,\n\tpayload: showOrphan\n});\n\nexport const setShowButtonText: ActionCreator<SetShowButtonTextAction> = (\n\tshowButtonText: boolean\n) => ({\n\ttype: SET_SHOW_BUTTON_TEXT,\n\tpayload: showButtonText\n});\n","import {\n\tAlignment,\n\tNavbar as BPNavbar,\n\tPopover,\n\tPosition,\n\tTabs,\n\tTooltip\n} from '@blueprintjs/core';\nimport React, { FC, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { ReactComponent as Logo } from '../../assets/images/juggler.svg';\nimport { AppState } from '../../store';\nimport { ALL_PROJECTS, DARK_THEME } from '../../utils/constants';\nimport { DataBase, Project } from '../../utils/types/types';\nimport TooltippedButton from '../tooltippedbutton/tooltippedbutton';\nimport { ActionsMenu } from './actions.menu';\nimport SettingsForm from './settings.form';\n\ntype NavbarStateProps = {\n\ttheme: string;\n\tshowButtonText: boolean;\n};\n\ntype NavbarProps = {\n\tdumpDataBase: () => void;\n\tloadDataBase: () => void;\n\tsetSelectedProject: (p: number) => void;\n\tdataBase: DataBase;\n\tselectedProject: number;\n\topenDeleteProjAlert: (b: boolean) => void;\n\topenAddProjDialog: (b: boolean) => void;\n\topenEditProjDialog: (b: boolean) => void;\n} & NavbarStateProps;\n\nconst Navbar: FC<NavbarProps> = ({\n\ttheme,\n\tdumpDataBase,\n\tloadDataBase,\n\tsetSelectedProject,\n\tdataBase,\n\tselectedProject,\n\topenDeleteProjAlert,\n\topenAddProjDialog,\n\topenEditProjDialog,\n\tshowButtonText\n}) => {\n\tconst projects: Project[] = [\n\t\t{\n\t\t\tname: 'All',\n\t\t\tid: ALL_PROJECTS,\n\t\t\tdesc: 'All the projects'\n\t\t},\n\t\t...dataBase.projects\n\t];\n\tconst [logoClass, setLogoClass] = useState('');\n\tconst logoAnimation = [\n\t\t'bounce',\n\t\t'flash',\n\t\t'pulse',\n\t\t'rubberBand',\n\t\t'headShake',\n\t\t'swing',\n\t\t'tada',\n\t\t'wobble',\n\t\t'jello',\n\t\t'heartBeat'\n\t];\n\tconst [logoAnimationIdx, setLogoAnimationIdx] = useState(0);\n\n\treturn (\n\t\t<BPNavbar>\n\t\t\t<BPNavbar.Group align={Alignment.LEFT}>\n\t\t\t\t<BPNavbar.Heading\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\talignItems: 'center'\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseEnter={() =>\n\t\t\t\t\t\tsetLogoClass('animated ' + logoAnimation[logoAnimationIdx])\n\t\t\t\t\t}\n\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\tsetLogoClass('');\n\t\t\t\t\t\tsetLogoAnimationIdx((logoAnimationIdx + 1) % logoAnimation.length);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Logo\n\t\t\t\t\t\tclassName={logoClass}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tanimationIterationCount: 'infinite'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\theight='40px'\n\t\t\t\t\t\tfill={theme === DARK_THEME ? 'white' : 'black'}\n\t\t\t\t\t/>\n\t\t\t\t\t<div style={{ marginLeft: '10px' }}>\n\t\t\t\t\t\t{'Tasks Juggler'.toUpperCase()}\n\t\t\t\t\t</div>\n\t\t\t\t</BPNavbar.Heading>\n\t\t\t</BPNavbar.Group>\n\t\t\t<BPNavbar.Group align={Alignment.RIGHT}>\n\t\t\t\t<Tabs\n\t\t\t\t\tlarge\n\t\t\t\t\tonChange={id => {\n\t\t\t\t\t\tsetSelectedProject(id as number);\n\t\t\t\t\t}}\n\t\t\t\t\tselectedTabId={selectedProject}\n\t\t\t\t>\n\t\t\t\t\t{projects.map((p: Project) => (\n\t\t\t\t\t\t<Tabs.Tab\n\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t<Tooltip content={p.desc} position={Position.BOTTOM}>\n\t\t\t\t\t\t\t\t\t{p.name.toUpperCase()}\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tid={p.id}\n\t\t\t\t\t\t\tkey={p.id}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Tabs>\n\t\t\t\t<BPNavbar.Divider />\n\t\t\t\t<Popover\n\t\t\t\t\tcontent={\n\t\t\t\t\t\t<ActionsMenu\n\t\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\t\topenAddProjDialog,\n\t\t\t\t\t\t\t\topenEditProjDialog,\n\t\t\t\t\t\t\t\tselectedProject,\n\t\t\t\t\t\t\t\topenDeleteProjAlert,\n\t\t\t\t\t\t\t\tdumpDataBase,\n\t\t\t\t\t\t\t\tloadDataBase\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tposition={Position.BOTTOM}\n\t\t\t\t>\n\t\t\t\t\t<TooltippedButton\n\t\t\t\t\t\tbuttonProps={{ minimal: true, icon: 'build' }}\n\t\t\t\t\t\ttext='Actions'\n\t\t\t\t\t\tshowButtonText={showButtonText}\n\t\t\t\t\t\tposition={Position.LEFT}\n\t\t\t\t\t/>\n\t\t\t\t</Popover>\n\t\t\t\t<Popover content={<SettingsForm />} position={Position.BOTTOM}>\n\t\t\t\t\t<TooltippedButton\n\t\t\t\t\t\tbuttonProps={{ minimal: true, icon: 'cog' }}\n\t\t\t\t\t\ttext='Settings'\n\t\t\t\t\t\tshowButtonText={showButtonText}\n\t\t\t\t\t\tposition={Position.LEFT}\n\t\t\t\t\t/>\n\t\t\t\t</Popover>\n\t\t\t</BPNavbar.Group>\n\t\t</BPNavbar>\n\t);\n};\n\nconst mapStateToProps = (state: AppState): NavbarStateProps => ({\n\ttheme: state.settings.theme,\n\tshowButtonText: state.settings.showButtonText\n});\n\nexport default connect(mapStateToProps)(Navbar);\n","import {\n\tButton,\n\tClasses,\n\tDialog,\n\tFileInput,\n\tIDialogProps,\n\tIntent,\n\tTextArea\n} from '@blueprintjs/core';\nimport React, { FC, useState } from 'react';\n\nconst fileSaver = require('file-saver');\nconst fileReader = new FileReader();\n\ntype DumpDataBaseDialogProps = {\n\tdump: string;\n\tonClipboard: () => void;\n} & IDialogProps;\n\nexport const DumpDataBaseDialog: FC<DumpDataBaseDialogProps> = ({\n\tisOpen,\n\tonClose,\n\tdump,\n\tonClipboard\n}) => (\n\t<Dialog\n\t\ticon='database'\n\t\ttitle='DataBase dump'\n\t\tisOpen={isOpen}\n\t\tonClose={onClose}\n\t>\n\t\t<div className={Classes.DIALOG_BODY}>\n\t\t\t<p>Copy to clipboard or save it to your files :</p>\n\t\t\t<TextArea\n\t\t\t\tid='dump'\n\t\t\t\treadOnly\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tminHeight: '300px'\n\t\t\t\t}}\n\t\t\t\tdefaultValue={dump}\n\t\t\t/>\n\t\t</div>\n\t\t<div className={Classes.DIALOG_FOOTER}>\n\t\t\t<div className={Classes.DIALOG_FOOTER_ACTIONS}>\n\t\t\t\t<Button\n\t\t\t\t\ttext='Copy to clipboard'\n\t\t\t\t\ticon='clipboard'\n\t\t\t\t\tintent={Intent.PRIMARY}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t// Copy to clipboard\n\t\t\t\t\t\t(document.getElementById('dump') as HTMLTextAreaElement).select();\n\t\t\t\t\t\tdocument.execCommand('copy');\n\t\t\t\t\t\t// Display toaster\n\t\t\t\t\t\tonClipboard();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttext='Download as JSON'\n\t\t\t\t\ticon='download'\n\t\t\t\t\tintent={Intent.PRIMARY}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tconst blob = new Blob([dump], { type: 'text/plain;charset=utf-8' });\n\t\t\t\t\t\tfileSaver.saveAs(blob, 'tasks-juggler-db.json');\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t</Dialog>\n);\n\ntype LoadDataBaseDialogProps = {\n\tonLoad: (input: string) => boolean;\n} & IDialogProps;\n\nexport const LoadDataBaseDialog: FC<LoadDataBaseDialogProps> = ({\n\tisOpen,\n\tonClose,\n\tonLoad\n}) => {\n\tconst [input, setInput] = useState('');\n\tconst [file, setFile] = useState('');\n\n\tconst loadAndClose = (input: string) => {\n\t\tif (onLoad(input)) {\n\t\t\tonClose!();\n\t\t}\n\t};\n\treturn (\n\t\t<Dialog\n\t\t\ticon='database'\n\t\t\ttitle='DataBase dump'\n\t\t\tisOpen={isOpen}\n\t\t\tonClose={onClose}\n\t\t>\n\t\t\t<div className={Classes.DIALOG_BODY}>\n\t\t\t\t<p>Copy your database in the following area and click on 'Load' :</p>\n\t\t\t\t<TextArea\n\t\t\t\t\tautoFocus\n\t\t\t\t\tid='dump'\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\tminHeight: '100px',\n\t\t\t\t\t\tmarginBottom: '10px'\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={input}\n\t\t\t\t\tonChange={event => setInput(event.target.value)}\n\t\t\t\t/>\n\t\t\t\t<div className={Classes.DIALOG_FOOTER_ACTIONS}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttext='Load'\n\t\t\t\t\t\tdisabled={input.length === 0}\n\t\t\t\t\t\ticon='upload'\n\t\t\t\t\t\tintent={Intent.PRIMARY}\n\t\t\t\t\t\tonClick={() => loadAndClose(input)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={Classes.DIALOG_FOOTER}>\n\t\t\t\t<p>OR load from your files :</p>\n\t\t\t\t<div className={Classes.DIALOG_FOOTER_ACTIONS}>\n\t\t\t\t\t<FileInput\n\t\t\t\t\t\ttext={file || 'Choose JSON file'}\n\t\t\t\t\t\tbuttonText={'Browse'}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tid: 'file-input',\n\t\t\t\t\t\t\taccept: '.json',\n\t\t\t\t\t\t\tmultiple: false,\n\t\t\t\t\t\t\tonChange: e => setFile(e.currentTarget.value)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttext='Load from a file'\n\t\t\t\t\t\ticon='folder-open'\n\t\t\t\t\t\tintent={Intent.PRIMARY}\n\t\t\t\t\t\tdisabled={file === ''}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tconst hie = document.getElementById(\n\t\t\t\t\t\t\t\t'file-input'\n\t\t\t\t\t\t\t) as HTMLInputElement;\n\t\t\t\t\t\t\tfileReader.onload = () => {\n\t\t\t\t\t\t\t\tloadAndClose(fileReader.result as string);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfileReader.readAsText(hie.files![0]);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Dialog>\n\t);\n};\n","import { Alert, IAlertProps, Intent } from '@blueprintjs/core';\nimport React, { FC } from 'react';\n\ntype DeleteAlertProps = {\n\tdeletionTargetName: string;\n} & IAlertProps;\n\nconst DeleteAlert: FC<DeleteAlertProps> = ({\n\tdeletionTargetName,\n\t...alertProps\n}) => (\n\t<Alert\n\t\tcancelButtonText='Cancel'\n\t\ticon='trash'\n\t\tintent={Intent.DANGER}\n\t\tcanEscapeKeyCancel={true}\n\t\tcanOutsideClickCancel={true}\n\t\t{...alertProps}\n\t>\n\t\t<p>{`Are you sure you want to delete ${deletionTargetName} ?`}</p>\n\t</Alert>\n);\n\nexport default DeleteAlert;\n","import {\n\tButton,\n\tClasses,\n\tDialog,\n\tIDialogProps,\n\tIntent\n} from '@blueprintjs/core';\nimport React, { FC } from 'react';\n\ntype GenericAddEditDialogProps = {\n\ttype: 'add' | 'edit';\n\twhat: string; // type of object to be added or editted\n\tdisabled: boolean;\n\taction: () => void;\n} & IDialogProps;\n\nconst AddEditDialog: FC<GenericAddEditDialogProps> = ({\n\ttype,\n\twhat,\n\tdisabled,\n\taction,\n\t...dialogProps\n}) => (\n\t<Dialog\n\t\ticon={type}\n\t\ttitle={`${type.charAt(0).toUpperCase() + type.slice(1)} ${what}`}\n\t\tcanOutsideClickClose={false}\n\t\t{...dialogProps}\n\t>\n\t\t<div className={Classes.DIALOG_BODY}>{dialogProps.children}</div>\n\t\t<div className={Classes.DIALOG_FOOTER}>\n\t\t\t<div className={Classes.DIALOG_FOOTER_ACTIONS}>\n\t\t\t\t<Button onClick={dialogProps.onClose}>Close</Button>\n\t\t\t\t<Button\n\t\t\t\t\ttext={`${type.charAt(0).toUpperCase() + type.slice(1)} ${what}`}\n\t\t\t\t\tintent={Intent.PRIMARY}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\taction();\n\t\t\t\t\t\tdialogProps.onClose!();\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t</Dialog>\n);\n\nexport default AddEditDialog;\n","import {\n\tFormGroup,\n\tIDialogProps,\n\tInputGroup,\n\tTextArea\n} from '@blueprintjs/core';\nimport React, { FC, useEffect, useState } from 'react';\nimport {\n\tPNV_NOK_NAME_TAKEN,\n\tPNV_NOK_OTHER,\n\tPNV_OK,\n\tProjectNameValidity\n} from '../../utils/data/database';\nimport { Project } from '../../utils/types/types';\nimport AddEditDialog from './add-edit.dialog';\n\ntype AddEditProjectDialogprops = {\n\ttype: 'add' | 'edit';\n\tdisabled: boolean;\n\taction: () => void;\n\terrorMessage: string;\n\tname: string;\n\tdesc: string;\n\tonNameChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n\tonDescChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n} & IDialogProps;\n\nconst AddEditProjectDialog: FC<AddEditProjectDialogprops> = ({\n\ttype,\n\tdisabled,\n\taction,\n\terrorMessage,\n\tname,\n\tdesc,\n\tonNameChange,\n\tonDescChange,\n\t...dialogProps\n}) => (\n\t<AddEditDialog\n\t\ttype={type}\n\t\twhat='project'\n\t\tdisabled={disabled}\n\t\taction={action}\n\t\t{...dialogProps}\n\t>\n\t\t<FormGroup\n\t\t\thelperText={errorMessage}\n\t\t\tlabel='Project name'\n\t\t\tlabelFor='name-input'\n\t\t\tlabelInfo='(required)'\n\t\t\tinline\n\t\t>\n\t\t\t<InputGroup\n\t\t\t\tid='name-input'\n\t\t\t\tplaceholder='Enter project name here.'\n\t\t\t\tvalue={name}\n\t\t\t\tonChange={onNameChange}\n\t\t\t\tautoFocus\n\t\t\t/>\n\t\t</FormGroup>\n\t\t<FormGroup\n\t\t\tlabel='Description'\n\t\t\tlabelFor='desc-input'\n\t\t\tlabelInfo='(recommended)'\n\t\t>\n\t\t\t<TextArea\n\t\t\t\tid='desc-input'\n\t\t\t\tplaceholder='Enter a short description of the project here.'\n\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\tvalue={desc}\n\t\t\t\tonChange={onDescChange}\n\t\t\t/>\n\t\t</FormGroup>\n\t</AddEditDialog>\n);\n\ntype AddProjectDialogProps = {\n\tadd: (name: string, desc: string) => void;\n\tvalidateName: (\n\t\tname: string\n\t) => { valid: ProjectNameValidity; reason?: string };\n} & IDialogProps;\n\nexport const AddProjectDialog: FC<AddProjectDialogProps> = ({\n\tadd,\n\tvalidateName,\n\t...dialogProps\n}) => {\n\tconst [name, setName] = useState('');\n\tconst [desc, setDesc] = useState('');\n\tconst [disabled, setDisabled] = useState(true);\n\tconst [errorMessage, setErrorMessage] = useState('');\n\treturn (\n\t\t<AddEditProjectDialog\n\t\t\ttype='add'\n\t\t\tdisabled={disabled}\n\t\t\taction={() => add(name, desc)}\n\t\t\terrorMessage={errorMessage}\n\t\t\tname={name}\n\t\t\tdesc={desc}\n\t\t\tonNameChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\tconst value = e.target.value;\n\t\t\t\tsetName(value);\n\t\t\t\tconst { valid, reason } = validateName(value);\n\t\t\t\tsetDisabled(valid !== PNV_OK);\n\t\t\t\tsetErrorMessage(reason || '');\n\t\t\t}}\n\t\t\tonDescChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n\t\t\t\tsetDesc(e.target.value)\n\t\t\t}\n\t\t\t{...dialogProps}\n\t\t/>\n\t);\n};\n\ntype EditProjectDialogProps = {\n\tproject: Project;\n\tvalidateName: (\n\t\tname: string\n\t) => { valid: ProjectNameValidity; reason?: string };\n\tedit: (id: number, name: string, desc: string) => void;\n} & IDialogProps;\n\nexport const EditProjectDialog: FC<EditProjectDialogProps> = ({\n\tproject,\n\tvalidateName,\n\tedit,\n\t...dialogProps\n}) => {\n\tconst [name, setName] = useState('ERROR');\n\tconst [desc, setDesc] = useState('ERROR');\n\tuseEffect(() => {\n\t\tif (project) {\n\t\t\tsetName(project.name);\n\t\t\tsetDesc(project.desc);\n\t\t}\n\t}, [project]);\n\tconst [disabled, setDisabled] = useState(true);\n\tconst [errorMessage, setErrorMessage] = useState('');\n\tconst update = (newName: string, newDesc: string) => {\n\t\tlet { valid, reason } = validateName(newName);\n\t\tif (valid === PNV_NOK_NAME_TAKEN && newName === project.name) {\n\t\t\t// Accept same name if same project but desc has changed\n\t\t\tif (newDesc !== project.desc) {\n\t\t\t\tvalid = PNV_OK;\n\t\t\t\treason = '';\n\t\t\t} else {\n\t\t\t\tvalid = PNV_NOK_OTHER;\n\t\t\t\treason = 'Nothing changed...';\n\t\t\t}\n\t\t}\n\t\tsetDisabled(valid !== PNV_OK);\n\t\tsetErrorMessage(reason || '');\n\t};\n\treturn (\n\t\t<AddEditProjectDialog\n\t\t\ttype='edit'\n\t\t\tdisabled={disabled}\n\t\t\taction={() => edit(project.id, name, desc)}\n\t\t\terrorMessage={errorMessage}\n\t\t\tname={name}\n\t\t\tdesc={desc}\n\t\t\tonNameChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\tconst value = e.target.value;\n\t\t\t\tsetName(value);\n\t\t\t\tupdate(value, desc);\n\t\t\t}}\n\t\t\tonDescChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n\t\t\t\tsetDesc(e.target.value);\n\t\t\t\tupdate(name, e.target.value);\n\t\t\t}}\n\t\t\t{...dialogProps}\n\t\t/>\n\t);\n};\n","import React, { CSSProperties, FC } from 'react';\nimport { Transition } from 'react-transition-group';\nimport {\n\tENTERED,\n\tENTERING,\n\tEXITED,\n\tEXITING,\n\tTransitionProps\n} from 'react-transition-group/Transition';\n\ntype AnimationProps = {\n\tcustomClass?: string;\n\tcustomStyle?: CSSProperties;\n\tenteringAnimation?: string;\n\tenteredAnimation?: string;\n\texitingAnimation?: string;\n\texitedAnimation?: string;\n} & TransitionProps;\n\nconst Animation: FC<AnimationProps> = ({\n\tcustomClass,\n\tcustomStyle,\n\tenteringAnimation,\n\tenteredAnimation,\n\texitingAnimation,\n\texitedAnimation,\n\t...transitionProps\n}) => {\n\tconst classFrom: { [key: string]: string | undefined } = {\n\t\t[ENTERING as string]: enteringAnimation,\n\t\t[ENTERED as string]: enteredAnimation,\n\t\t[EXITING as string]: exitingAnimation,\n\t\t[EXITED as string]: exitedAnimation\n\t};\n\treturn (\n\t\t<Transition {...transitionProps}>\n\t\t\t{state => (\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${customClass || ''} animated ${classFrom[state] || ''}`}\n\t\t\t\t\tstyle={customStyle}\n\t\t\t\t>\n\t\t\t\t\t{transitionProps.children}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Transition>\n\t);\n};\n\nexport default Animation;\n","import {\n\tFormGroup,\n\tHTMLSelect,\n\tIDialogProps,\n\tInputGroup,\n\tNumericInput,\n\tSlider,\n\tSwitch,\n\tTextArea\n} from '@blueprintjs/core';\nimport React, { FC, useEffect, useState } from 'react';\nimport { TASK_DURATION_NONE } from '../../utils/constants';\nimport { TaskTitleValidity, TTV_OK } from '../../utils/data/database';\nimport { Project } from '../../utils/types/types';\nimport Animation from '../animation/animation';\nimport AddEditDialog from './add-edit.dialog';\n\ntype AddEditTaskDialogprops = {\n\ttype: 'add' | 'edit';\n\tdisabled: boolean;\n\taction: (projectId: number, duration: number) => void;\n\terrorMessage: string;\n\ttaskTitle: string;\n\tdesc: string;\n\tprojects: Project[];\n\tselectedProject: number;\n\tsetSelectedProject: (id: number) => void;\n\tonTitleChange: (title: string) => void;\n\tonDescChange: (desc: string) => void;\n} & IDialogProps;\n\nconst AddEditTaskDialog: FC<AddEditTaskDialogprops> = ({\n\ttype,\n\tdisabled,\n\taction,\n\terrorMessage,\n\ttaskTitle,\n\tdesc,\n\tprojects,\n\tselectedProject,\n\tsetSelectedProject,\n\tonTitleChange,\n\tonDescChange,\n\t...dialogProps\n}) => {\n\tconst [durationEnabled, setDurationEnabled] = useState(false);\n\tconst [duration, setDuration] = useState(TASK_DURATION_NONE);\n\treturn (\n\t\t<AddEditDialog\n\t\t\ttype={type}\n\t\t\twhat='task'\n\t\t\tdisabled={disabled}\n\t\t\taction={() => action(selectedProject, duration)}\n\t\t\t{...dialogProps}\n\t\t>\n\t\t\t<FormGroup\n\t\t\t\tlabel='Task project'\n\t\t\t\tlabelFor='project-input'\n\t\t\t\tlabelInfo='(required)'\n\t\t\t\tinline\n\t\t\t>\n\t\t\t\t<HTMLSelect\n\t\t\t\t\toptions={projects.map(p => p.name)}\n\t\t\t\t\tvalue={projects.find(p => p.id === selectedProject)!.name}\n\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\tsetSelectedProject(\n\t\t\t\t\t\t\tprojects.find(p => p.name === e.currentTarget.value)!.id\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</FormGroup>\n\t\t\t<FormGroup\n\t\t\t\thelperText={errorMessage}\n\t\t\t\tlabel='Task title'\n\t\t\t\tlabelFor='title-input'\n\t\t\t\tlabelInfo='(required)'\n\t\t\t\tinline\n\t\t\t>\n\t\t\t\t<InputGroup\n\t\t\t\t\tid='title-input'\n\t\t\t\t\tplaceholder='Enter task title here.'\n\t\t\t\t\tvalue={taskTitle}\n\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tonTitleChange(e.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</FormGroup>\n\t\t\t<FormGroup\n\t\t\t\tlabel='Description'\n\t\t\t\tlabelFor='desc-input'\n\t\t\t\tlabelInfo='(recommended)'\n\t\t\t>\n\t\t\t\t<TextArea\n\t\t\t\t\tid='desc-input'\n\t\t\t\t\tplaceholder='Enter a short description of the task here.'\n\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\tvalue={desc}\n\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n\t\t\t\t\t\tonDescChange(e.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</FormGroup>\n\t\t\t<Switch\n\t\t\t\tchecked={durationEnabled}\n\t\t\t\tlabel='Set a duration'\n\t\t\t\tonChange={() => {\n\t\t\t\t\tsetDurationEnabled(!durationEnabled);\n\t\t\t\t\tsetDuration(TASK_DURATION_NONE);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Animation\n\t\t\t\tin={durationEnabled}\n\t\t\t\ttimeout={800}\n\t\t\t\tunmountOnExit\n\t\t\t\tenteringAnimation='fadeIn fast'\n\t\t\t\texitingAnimation='fadeOut fast'\n\t\t\t>\n\t\t\t\t<FormGroup\n\t\t\t\t\tlabel='Duration'\n\t\t\t\t\tlabelFor='dur-input'\n\t\t\t\t\tlabelInfo='in days (optionnal)'\n\t\t\t\t>\n\t\t\t\t\t<NumericInput\n\t\t\t\t\t\tid='dur-input'\n\t\t\t\t\t\tplaceholder='Enter number (float) of days here.'\n\t\t\t\t\t\tvalue={duration}\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmax={15}\n\t\t\t\t\t\tstepSize={0.5}\n\t\t\t\t\t\tmajorStepSize={1}\n\t\t\t\t\t\tonValueChange={(v: number) => setDuration(v)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmax={15}\n\t\t\t\t\t\tstepSize={0.5}\n\t\t\t\t\t\tvalue={duration} // ? Why doesn't it change when changing the numeric input ?\n\t\t\t\t\t\tonChange={(value: number) => setDuration(value)}\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t</Animation>\n\t\t</AddEditDialog>\n\t);\n};\n\ntype AddTaskDialogProps = {\n\tadd: (\n\t\ttitle: string,\n\t\tdesc: string,\n\t\tprojectId: number,\n\t\tduration: number | undefined\n\t) => void;\n\tvalidateTitle: (\n\t\ttitle: string,\n\t\tprojectId: number\n\t) => { valid: TaskTitleValidity; reason?: string };\n\tprojects: Project[];\n\tselectedProjectId: number;\n} & IDialogProps;\n\nexport const AddTaskDialog: FC<AddTaskDialogProps> = ({\n\tadd,\n\tvalidateTitle,\n\tprojects,\n\tselectedProjectId,\n\t...dialogProps\n}) => {\n\tconst [title, setTitle] = useState('');\n\tconst [desc, setDesc] = useState('');\n\tconst [disabled, setDisabled] = useState(true);\n\tconst [errorMessage, setErrorMessage] = useState('');\n\tconst [selectedProject, setSelectedProject] = useState(0);\n\tuseEffect(() => {\n\t\tsetSelectedProject(selectedProjectId >= 0 ? selectedProjectId : 0);\n\t}, [selectedProjectId]);\n\treturn (\n\t\t<AddEditTaskDialog\n\t\t\ttype='add'\n\t\t\tdisabled={disabled}\n\t\t\taction={(projectId: number, duration: number) =>\n\t\t\t\tadd(title, desc, projectId, duration)\n\t\t\t}\n\t\t\terrorMessage={errorMessage}\n\t\t\ttaskTitle={title}\n\t\t\tdesc={desc}\n\t\t\tprojects={projects}\n\t\t\tselectedProject={selectedProject}\n\t\t\tsetSelectedProject={(project: number) => {\n\t\t\t\tsetSelectedProject(project);\n\t\t\t\tif (title !== '') {\n\t\t\t\t\tconst { valid, reason } = validateTitle(title, project);\n\t\t\t\t\tsetDisabled(valid !== TTV_OK);\n\t\t\t\t\tsetErrorMessage(reason || '');\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonTitleChange={(value: string) => {\n\t\t\t\tsetTitle(value);\n\t\t\t\tconst { valid, reason } = validateTitle(value, selectedProject);\n\t\t\t\tsetDisabled(valid !== TTV_OK);\n\t\t\t\tsetErrorMessage(reason || '');\n\t\t\t}}\n\t\t\tonDescChange={(value: string) => setDesc(value)}\n\t\t\t{...dialogProps}\n\t\t/>\n\t);\n};\n","import { Card, Elevation } from '@blueprintjs/core';\nimport React, { FC } from 'react';\nimport { TASK_DURATION_NONE } from '../../utils/constants';\n\ntype TaskCardProps = {\n\ttitle: string;\n\tdesc: string;\n\tduration: number;\n\tonClick: () => void;\n\tselected: boolean;\n};\n\nconst TaskCard: FC<TaskCardProps> = ({\n\ttitle,\n\tdesc,\n\tduration,\n\tonClick,\n\tselected\n}) => {\n\treturn (\n\t\t<Card\n\t\t\tinteractive={true}\n\t\t\televation={Elevation.TWO}\n\t\t\tclassName='taskcard animated fadeIn fast' // TODO fadeOut when deleting\n\t\t\tonClick={onClick}\n\t\t\tstyle={{\n\t\t\t\tborder: `2px solid ${selected ? '#39acac' : 'rgba(0,0,0,0)'}`\n\t\t\t}}\n\t\t>\n\t\t\t<h3 className='taskcard'>{title}</h3>\n\t\t\t<p className='taskcard'>{desc}</p>\n\t\t\t{duration !== TASK_DURATION_NONE && (\n\t\t\t\t<p className='taskcard'>{`${duration} day(s)`}</p>\n\t\t\t)}\n\t\t</Card>\n\t);\n};\n\nexport default TaskCard;\n","import { ButtonGroup, H3, Position } from '@blueprintjs/core';\nimport React, { Dispatch, FC } from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../store';\nimport { selectTask, unselectTask } from '../../store/tasks/actions';\nimport { TasksActionTypes } from '../../store/tasks/types';\nimport { ALL_PROJECTS, NO_PROJECT } from '../../utils/constants';\nimport { Task } from '../../utils/types/types';\nimport Animation from '../animation/animation';\nimport TooltippedButton from '../tooltippedbutton/tooltippedbutton';\nimport TaskCard from './task.card';\n\ntype TaskGroupStateProps = {\n\tshowButtonText: boolean;\n\tselectedIds: number[];\n\tsmallScreen: boolean;\n};\n\ntype TaskGroupDispatchProps = {\n\tselectTask: (id: number) => void;\n\tunselectTask: (id: number) => void;\n};\n\ntype TaskGroupProps = {\n\ttitle: string;\n\ttasks: Task[];\n\tselectedProject: number;\n\tshow?: boolean;\n\topenAddTaskDialog: (open: boolean) => void;\n\topenDeleteTaskAlert: (open: boolean) => void;\n} & TaskGroupStateProps &\n\tTaskGroupDispatchProps;\n\nconst TaskGroup: FC<TaskGroupProps> = ({\n\ttitle,\n\ttasks,\n\tselectedProject,\n\tshow = true,\n\topenAddTaskDialog,\n\topenDeleteTaskAlert,\n\tshowButtonText,\n\tselectedIds,\n\tselectTask,\n\tunselectTask,\n\tsmallScreen\n}) => {\n\tconst filteredTasks = tasks.filter(\n\t\tt =>\n\t\t\tt.projectId === selectedProject ||\n\t\t\t(selectedProject === ALL_PROJECTS && t.projectId !== NO_PROJECT)\n\t);\n\treturn (\n\t\t<Animation\n\t\t\tin={show}\n\t\t\ttimeout={800}\n\t\t\tunmountOnExit\n\t\t\tcustomStyle={{ padding: '50px 50px 0 50px' }}\n\t\t\tenteringAnimation='fadeInDown fast'\n\t\t\texitingAnimation='fadeOutUp fast'\n\t\t>\n\t\t\t<div style={{ display: 'inline' }}>\n\t\t\t\t<H3 style={{ display: 'inline-block', marginRight: '10px' }}>\n\t\t\t\t\t{title}\n\t\t\t\t</H3>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<TooltippedButton\n\t\t\t\t\t\ttext={smallScreen ? 'Add' : 'Add task'}\n\t\t\t\t\t\tposition={Position.TOP}\n\t\t\t\t\t\tshowButtonText={showButtonText}\n\t\t\t\t\t\tbuttonProps={{\n\t\t\t\t\t\t\ticon: 'add',\n\t\t\t\t\t\t\tonClick: () => openAddTaskDialog(true)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</ButtonGroup>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Animation\n\t\t\t\t\t\tin={filteredTasks.some(({ id }) => selectedIds.includes(id))}\n\t\t\t\t\t\ttimeout={800}\n\t\t\t\t\t\tunmountOnExit\n\t\t\t\t\t\tcustomStyle={{ display: 'inline' }}\n\t\t\t\t\t\tenteringAnimation='fadeInLeft fast'\n\t\t\t\t\t\texitingAnimation='fadeOutLeft fast'\n\t\t\t\t\t>\n\t\t\t\t\t\t<div style={{ display: 'inline-block' }}>\n\t\t\t\t\t\t\t<TooltippedButton\n\t\t\t\t\t\t\t\ttext={\n\t\t\t\t\t\t\t\t\tsmallScreen\n\t\t\t\t\t\t\t\t\t\t? 'Delete'\n\t\t\t\t\t\t\t\t\t\t: 'Delete task' +\n\t\t\t\t\t\t\t\t\t\t  (filteredTasks.filter(({ id }) =>\n\t\t\t\t\t\t\t\t\t\t\t\tselectedIds.includes(id)\n\t\t\t\t\t\t\t\t\t\t  ).length > 1\n\t\t\t\t\t\t\t\t\t\t\t\t? 's'\n\t\t\t\t\t\t\t\t\t\t\t\t: '')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tposition={Position.TOP}\n\t\t\t\t\t\t\t\tshowButtonText={showButtonText}\n\t\t\t\t\t\t\t\tbuttonProps={{\n\t\t\t\t\t\t\t\t\ticon: 'trash',\n\t\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\t\t// trick : unselect tasks not in the current task group before deletion\n\t\t\t\t\t\t\t\t\t\ttasks\n\t\t\t\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t\t\t\tt =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tt.projectId !== selectedProject &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t(selectedProject === ALL_PROJECTS &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tt.projectId === NO_PROJECT)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t.map(t => t.id)\n\t\t\t\t\t\t\t\t\t\t\t.forEach(id => unselectTask(id));\n\t\t\t\t\t\t\t\t\t\topenDeleteTaskAlert(true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style={{ display: 'inline-block' }}>\n\t\t\t\t\t\t\t<TooltippedButton\n\t\t\t\t\t\t\t\ttext='Select all'\n\t\t\t\t\t\t\t\tposition={Position.TOP}\n\t\t\t\t\t\t\t\tshowButtonText={showButtonText}\n\t\t\t\t\t\t\t\tbuttonProps={{\n\t\t\t\t\t\t\t\t\ticon: 'multi-select',\n\t\t\t\t\t\t\t\t\tonClick: () =>\n\t\t\t\t\t\t\t\t\t\tfilteredTasks.forEach(({ id }) => selectTask(id))\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\tfilteredTasks.every(({ id }) => !selectedIds.includes(id)) ||\n\t\t\t\t\t\t\t\t\tfilteredTasks.every(({ id }) => selectedIds.includes(id))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style={{ display: 'inline-block' }}>\n\t\t\t\t\t\t\t<TooltippedButton\n\t\t\t\t\t\t\t\ttext={smallScreen ? 'Clear' : 'Clear selection'}\n\t\t\t\t\t\t\t\tposition={Position.TOP}\n\t\t\t\t\t\t\t\tshowButtonText={showButtonText}\n\t\t\t\t\t\t\t\tbuttonProps={{\n\t\t\t\t\t\t\t\t\ticon: 'eraser',\n\t\t\t\t\t\t\t\t\tonClick: () =>\n\t\t\t\t\t\t\t\t\t\tfilteredTasks.forEach(({ id }) => unselectTask(id))\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Animation>\n\t\t\t\t</ButtonGroup>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginTop: '10px',\n\t\t\t\t\tdisplay: 'grid',\n\t\t\t\t\tgridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n\t\t\t\t\tgridGap: '10px'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{filteredTasks.map(task => {\n\t\t\t\t\tlet { title, desc, duration, id } = task;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TaskCard\n\t\t\t\t\t\t\t{...{ title, desc, duration }}\n\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\tselectedIds.includes(id) ? unselectTask(id) : selectTask(id)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tselected={selectedIds.includes(id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</Animation>\n\t);\n};\n\nconst mapStateToProps = (state: AppState): TaskGroupStateProps => ({\n\tshowButtonText: state.settings.showButtonText,\n\tselectedIds: state.tasks.selected,\n\tsmallScreen: state.window.smallScreen\n});\n\nconst mapDispatchToProps = (\n\tdispatch: Dispatch<TasksActionTypes>\n): TaskGroupDispatchProps => ({\n\tselectTask: (id: number) => dispatch(selectTask(id)),\n\tunselectTask: (id: number) => dispatch(unselectTask(id))\n});\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(TaskGroup);\n","import { ActionCreator } from 'redux';\nimport {\n\tSelectTaskAction,\n\tSELECT_TASK,\n\tUnselectAllAction,\n\tUnselectTaskAction,\n\tUNSELECT_ALL,\n\tUNSELECT_TASK\n} from './types';\n\n// Type these action creators with `: ActionCreator<ActionTypeYouWantToPass>`.\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly.\n\nexport const selectTask: ActionCreator<SelectTaskAction> = (id: number) => ({\n\ttype: SELECT_TASK,\n\tpayload: id\n});\n\nexport const unselectTask: ActionCreator<UnselectTaskAction> = (\n\tid: number\n) => ({\n\ttype: UNSELECT_TASK,\n\tpayload: id\n});\n\nexport const unselectAll: ActionCreator<UnselectAllAction> = () => ({\n\ttype: UNSELECT_ALL\n});\n","import { H3, IIntentProps, Intent, IToaster } from '@blueprintjs/core';\nimport { ESCAPE } from '@blueprintjs/core/lib/esm/common/keys';\nimport React, { Dispatch, FC, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../store';\nimport { unselectAll } from '../../store/tasks/actions';\nimport { TasksActionTypes } from '../../store/tasks/types';\nimport { setSmallScreen } from '../../store/window/actions';\nimport { WindowActionTypes } from '../../store/window/types';\nimport {\n\tALL_PROJECTS,\n\tDATABASE_STORAGE_KEY,\n\tNO_PROJECT,\n\tTASK_DURATION_NONE\n} from '../../utils/constants';\nimport {\n\tcreateFakeDataBase,\n\tgetNextProjectId,\n\tgetNextTaskId,\n\tgetProject,\n\tvalidateDB,\n\tvalidateProjectName,\n\tvalidateTaskTitle\n} from '../../utils/data/database';\nimport { DataBase, Project, Task } from '../../utils/types/types';\nimport Navbar from '../nav/navbar';\nimport {\n\tDumpDataBaseDialog,\n\tLoadDataBaseDialog\n} from '../overlays/database.dialogs';\nimport DeleteAlert from '../overlays/delete.alert';\nimport {\n\tAddProjectDialog,\n\tEditProjectDialog\n} from '../overlays/project.dialogs';\nimport { AddTaskDialog } from '../overlays/task.dialogs';\nimport TaskGroup from '../tasks/task.group';\nimport './app.css';\n\ntype AppStateProps = {\n\ttheme: string;\n\tshowOrphan: boolean;\n\tselectedTasks: number[];\n};\n\ntype AppDispatchProps = {\n\tunselectAll: () => void;\n\tsetSmallScreen: (smallScreen: boolean) => void;\n};\n\ntype AppProps = {\n\ttoaster: IToaster;\n} & AppStateProps &\n\tAppDispatchProps;\n\nconst App: FC<AppProps> = ({\n\ttoaster,\n\ttheme,\n\tshowOrphan,\n\tselectedTasks,\n\tunselectAll,\n\tsetSmallScreen\n}) => {\n\t// Overlays states\n\tconst [deleteProjAlertOpen, openDeleteProjAlert] = useState(false);\n\tconst [addProjDialogOpen, openAddProjDialog] = useState(false);\n\tconst [editProjDialogOpen, openEditProjDialog] = useState(false);\n\t// TODO edit task dialog\n\tconst [deleteTaskAlertOpen, openDeleteTaskAlert] = useState(false);\n\tconst [addTaskDialogOpen, openAddTaskDialog] = useState(false);\n\tconst [dumpDBDialogOpen, openDumpDBDialog] = useState(false);\n\tconst [loadDBDialogOpen, openLoadDBDialog] = useState(false);\n\n\t// Data states\n\tconst localDBStr = localStorage.getItem(DATABASE_STORAGE_KEY);\n\tlet localDB: DataBase | undefined;\n\tif (localDBStr) {\n\t\ttry {\n\t\t\tlocalDB = JSON.parse(localDBStr);\n\t\t} catch (error) {}\n\t}\n\tconst [dataBase, setDataBase] = useState(localDB || createFakeDataBase());\n\tconst updateDataBase = (db: DataBase) => {\n\t\tsetDataBase(db);\n\t\tlocalStorage.setItem(DATABASE_STORAGE_KEY, JSON.stringify(db));\n\t};\n\tconst [selectedProject, setSelectedProject] = useState(ALL_PROJECTS);\n\n\t// Methods on database\n\tconst addProject = (name: string, desc: string) => {\n\t\tconst projectId = getNextProjectId(dataBase);\n\t\tdataBase.projects.push({\n\t\t\tname: name,\n\t\t\tdesc: desc,\n\t\t\tid: projectId\n\t\t});\n\t\tupdateDataBase(dataBase);\n\t\tsetSelectedProject(projectId);\n\t};\n\tconst editProject = (id: number, name: string, desc: string) => {\n\t\tdataBase.projects.forEach(p => {\n\t\t\tif (p.id === id) {\n\t\t\t\tp.name = name;\n\t\t\t\tp.desc = desc;\n\t\t\t}\n\t\t});\n\t\tupdateDataBase(dataBase);\n\t};\n\tconst deleteProject = (projectId: number) => {\n\t\tdataBase.projects = dataBase.projects.filter(\n\t\t\t(p: Project) => p.id !== projectId\n\t\t);\n\t\tdataBase.tasks.forEach(\n\t\t\t(t: Task) => t.projectId === projectId && (t.projectId = NO_PROJECT)\n\t\t);\n\t\tupdateDataBase(dataBase);\n\t\tsetSelectedProject(ALL_PROJECTS);\n\t};\n\tconst addTask = (\n\t\ttitle: string,\n\t\tdesc: string,\n\t\tprojectId: number,\n\t\tduration: number | undefined\n\t) => {\n\t\tdataBase.tasks.push({\n\t\t\tid: getNextTaskId(dataBase),\n\t\t\tduration: duration || TASK_DURATION_NONE,\n\t\t\t...{\n\t\t\t\ttitle,\n\t\t\t\tprojectId,\n\t\t\t\tdesc\n\t\t\t}\n\t\t});\n\t\tupdateDataBase(dataBase);\n\t\tsetSelectedProject(projectId);\n\t};\n\tconst deleteTask = (taskId: number) => {\n\t\tdataBase.tasks = dataBase.tasks.filter(t => t.id !== taskId);\n\t\tupdateDataBase(dataBase);\n\t\tunselectAll();\n\t};\n\n\t// Toaster\n\tReactDOM.createPortal(toaster, document.getElementById('root')!);\n\tconst addToast = (message: string, intent: IIntentProps['intent']) => {\n\t\ttoaster.show({ message, intent });\n\t};\n\n\t// Listen to escape and unselect all tasks\n\tuseEffect(() => {\n\t\tconst keydownListener = (e: KeyboardEvent) => {\n\t\t\tif (e.keyCode === ESCAPE) unselectAll();\n\t\t};\n\t\tdocument.addEventListener('keydown', keydownListener);\n\t\treturn () => document.removeEventListener('keydown', keydownListener);\n\t}, [unselectAll]);\n\n\t// Detect window size\n\tconst mediaQuerySelector = window.matchMedia('(max-width: 500px)');\n\tmediaQuerySelector.addListener((e: MediaQueryListEvent) =>\n\t\tsetSmallScreen(e.matches)\n\t);\n\n\treturn (\n\t\t<div className={theme} id='container'>\n\t\t\t<Navbar\n\t\t\t\tdumpDataBase={() => openDumpDBDialog(true)}\n\t\t\t\tloadDataBase={() => openLoadDBDialog(true)}\n\t\t\t\t{...{\n\t\t\t\t\tsetSelectedProject,\n\t\t\t\t\tdataBase,\n\t\t\t\t\tdeleteProject,\n\t\t\t\t\tselectedProject,\n\t\t\t\t\topenAddProjDialog,\n\t\t\t\t\topenDeleteProjAlert,\n\t\t\t\t\topenEditProjDialog,\n\t\t\t\t\topenAddTaskDialog,\n\t\t\t\t\topenDeleteTaskAlert\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<TaskGroup\n\t\t\t\ttitle='Tasks'\n\t\t\t\ttasks={dataBase.tasks}\n\t\t\t\tselectedProject={selectedProject}\n\t\t\t\topenAddTaskDialog={openAddTaskDialog}\n\t\t\t\topenDeleteTaskAlert={openDeleteTaskAlert}\n\t\t\t/>\n\t\t\t<TaskGroup\n\t\t\t\ttitle='Orphan tasks'\n\t\t\t\ttasks={dataBase.tasks}\n\t\t\t\tselectedProject={NO_PROJECT}\n\t\t\t\tshow={showOrphan}\n\t\t\t\topenAddTaskDialog={openAddTaskDialog}\n\t\t\t\topenDeleteTaskAlert={openDeleteTaskAlert}\n\t\t\t/>\n\t\t\t<div style={{ padding: '50px 50px 0 50px' }}>\n\t\t\t\t<div style={{ display: 'inline' }}>\n\t\t\t\t\t<H3 style={{ display: 'inline-block', marginRight: '10px' }}>\n\t\t\t\t\t\tPlanning\n\t\t\t\t\t</H3>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id='footer'>\n\t\t\t\t&copy; 2019 &ndash; Guillaume Comte &ndash; All rights reserved\n\t\t\t</div>\n\t\t\t{/* Overlays : */}\n\t\t\t<AddProjectDialog\n\t\t\t\tisOpen={addProjDialogOpen}\n\t\t\t\tonClose={() => openAddProjDialog(false)}\n\t\t\t\tadd={addProject}\n\t\t\t\tvalidateName={validateProjectName(dataBase)}\n\t\t\t/>\n\t\t\t<EditProjectDialog\n\t\t\t\tisOpen={editProjDialogOpen}\n\t\t\t\tonClose={() => openEditProjDialog(false)}\n\t\t\t\tedit={editProject}\n\t\t\t\tvalidateName={validateProjectName(dataBase)}\n\t\t\t\tproject={getProject(dataBase)(selectedProject)!}\n\t\t\t/>\n\t\t\t<DeleteAlert\n\t\t\t\tconfirmButtonText='Delete project'\n\t\t\t\tisOpen={deleteProjAlertOpen}\n\t\t\t\tonCancel={() => openDeleteProjAlert(false)}\n\t\t\t\tonConfirm={() => {\n\t\t\t\t\topenDeleteProjAlert(false);\n\t\t\t\t\tdeleteProject(selectedProject);\n\t\t\t\t}}\n\t\t\t\tdeletionTargetName={\n\t\t\t\t\tselectedProject === ALL_PROJECTS\n\t\t\t\t\t\t? 'ALL => IMPOSSIBLE'\n\t\t\t\t\t\t: dataBase.projects.find((p: Project) => p.id === selectedProject)!\n\t\t\t\t\t\t\t\t.name\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<AddTaskDialog\n\t\t\t\tisOpen={addTaskDialogOpen}\n\t\t\t\tonClose={() => openAddTaskDialog(false)}\n\t\t\t\tadd={addTask}\n\t\t\t\tvalidateTitle={validateTaskTitle(dataBase)}\n\t\t\t\tprojects={dataBase.projects}\n\t\t\t\tselectedProjectId={selectedProject}\n\t\t\t/>\n\t\t\t<DeleteAlert\n\t\t\t\tconfirmButtonText='Delete task'\n\t\t\t\tisOpen={deleteTaskAlertOpen}\n\t\t\t\tonCancel={() => openDeleteTaskAlert(false)}\n\t\t\t\tonConfirm={() => {\n\t\t\t\t\topenDeleteTaskAlert(false);\n\t\t\t\t\tselectedTasks.forEach(i => deleteTask(i));\n\t\t\t\t}}\n\t\t\t\tdeletionTargetName={'TODO selected task(s)'}\n\t\t\t/>\n\t\t\t<DumpDataBaseDialog\n\t\t\t\tisOpen={dumpDBDialogOpen}\n\t\t\t\tonClose={() => openDumpDBDialog(false)}\n\t\t\t\tdump={JSON.stringify(dataBase, null, '\\t')}\n\t\t\t\tonClipboard={() => addToast('Copied to clipboard !', Intent.SUCCESS)}\n\t\t\t/>\n\t\t\t<LoadDataBaseDialog\n\t\t\t\tisOpen={loadDBDialogOpen}\n\t\t\t\tonClose={() => openLoadDBDialog(false)}\n\t\t\t\tonLoad={(input: string) => {\n\t\t\t\t\tlet newDatabase: any | undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tnewDatabase = JSON.parse(input);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\taddToast('Imported DB format is not correct', Intent.WARNING);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst { valid, reason } = validateDB(newDatabase);\n\t\t\t\t\tif (!valid) {\n\t\t\t\t\t\taddToast(reason!, Intent.WARNING);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tupdateDataBase(newDatabase);\n\t\t\t\t\taddToast('DB successfully imported', Intent.SUCCESS);\n\t\t\t\t\treturn true;\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state: AppState): AppStateProps => ({\n\ttheme: state.settings.theme,\n\tshowOrphan: state.settings.showOrphan,\n\tselectedTasks: state.tasks.selected\n});\n\nconst mapDispatchToProps = (\n\tdispatch: Dispatch<TasksActionTypes | WindowActionTypes>\n): AppDispatchProps => ({\n\tunselectAll: () => dispatch(unselectAll()),\n\tsetSmallScreen: (smallScreen: boolean) =>\n\t\tdispatch(setSmallScreen(smallScreen))\n});\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(App);\n","import { ActionCreator } from 'redux';\nimport { SetSmallScreenAction, SET_SMALL_SCREEN } from './types';\n\n// Type these action creators with `: ActionCreator<ActionTypeYouWantToPass>`.\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly.\n\nexport const setSmallScreen: ActionCreator<SetSmallScreenAction> = (\n\tsmallScreen: boolean\n) => ({\n\ttype: SET_SMALL_SCREEN,\n\tpayload: smallScreen\n});\n","import { Action } from 'redux';\n\n// Window level state object\nexport type WindowState = {\n\tsmallScreen: boolean;\n};\n\nexport const SET_SMALL_SCREEN = '@@window/SET_SMALL_SCREEN';\n\nexport interface SetSmallScreenAction extends Action {\n\ttype: typeof SET_SMALL_SCREEN;\n\tpayload: boolean;\n}\n\nexport type WindowActionTypes = SetSmallScreenAction;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\t(process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n\t\t\twindow.location.href\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import { Reducer } from 'redux';\nimport {\n\tLIGHT_THEME,\n\tSHOW_BUTTON_TEXT_STORAGE_KEY,\n\tSHOW_ORPHAN_STORAGE_KEY,\n\tTHEME_STORAGE_KEY\n} from '../../utils/constants';\nimport {\n\tSettingsState,\n\tSET_SHOW_BUTTON_TEXT,\n\tSET_SHOW_ORPHAN,\n\tSET_THEME\n} from './types';\n\n// Type-safe initial state\nconst INITIAL_STATE: SettingsState = {\n\ttheme: localStorage.getItem(THEME_STORAGE_KEY) || LIGHT_THEME,\n\tshowOrphan: localStorage.getItem(SHOW_ORPHAN_STORAGE_KEY) === 'true',\n\tshowButtonText:\n\t\tlocalStorage.getItem(SHOW_BUTTON_TEXT_STORAGE_KEY) == null\n\t\t\t? true\n\t\t\t: localStorage.getItem(SHOW_BUTTON_TEXT_STORAGE_KEY) === 'true'\n};\n\nconst settingsReducer: Reducer<SettingsState> = (\n\tstate: SettingsState = INITIAL_STATE,\n\taction\n) => {\n\tswitch (action.type) {\n\t\tcase SET_THEME:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttheme: action.payload\n\t\t\t};\n\t\tcase SET_SHOW_ORPHAN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tshowOrphan: action.payload\n\t\t\t};\n\t\tcase SET_SHOW_BUTTON_TEXT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tshowButtonText: action.payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default settingsReducer;\n","import { Reducer } from 'redux';\nimport { SELECT_TASK, TasksState, UNSELECT_ALL, UNSELECT_TASK } from './types';\n\n// Type-safe initial state\nconst INITIAL_STATE: TasksState = {\n\tselected: []\n};\n\nconst tasksReducer: Reducer<TasksState> = (\n\tstate: TasksState = INITIAL_STATE,\n\taction\n) => {\n\tswitch (action.type) {\n\t\tcase SELECT_TASK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselected: state.selected.concat(action.payload)\n\t\t\t};\n\t\tcase UNSELECT_TASK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselected: state.selected.filter(x => x !== action.payload)\n\t\t\t};\n\t\tcase UNSELECT_ALL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselected: []\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default tasksReducer;\n","import { Reducer } from 'redux';\nimport { SET_SMALL_SCREEN, WindowState } from './types';\n\n// Type-safe initial state\nconst INITIAL_STATE: WindowState = {\n\tsmallScreen: window.innerWidth <= 500\n};\n\nconst windowReducer: Reducer<WindowState> = (\n\tstate: WindowState = INITIAL_STATE,\n\taction\n) => {\n\tswitch (action.type) {\n\t\tcase SET_SMALL_SCREEN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsmallScreen: action.payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default windowReducer;\n","import { applyMiddleware, combineReducers, createStore, Reducer } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport settingsReducer from './settings/reducer';\nimport { SettingsState } from './settings/types';\nimport tasksReducer from './tasks/reducer';\nimport { TasksState } from './tasks/types';\nimport windowReducer from './window/reducer';\nimport { WindowState } from './window/types';\n\n// The top-level state object\nexport type AppState = {\n\tsettings: SettingsState;\n\ttasks: TasksState;\n\twindow: WindowState;\n};\n\n// Whenever an action is dispatched, Redux will update each top-level application state property\n// using the reducer with the matching name. It's important that the names match exactly, and that\n// the reducer acts on the corresponding ApplicationState property type.\nexport const reducers: Reducer<AppState> = combineReducers<AppState>({\n\tsettings: settingsReducer,\n\ttasks: tasksReducer,\n\twindow: windowReducer\n});\n\n// Create the store with the middlewares\nlet middlewares: any[] | never[] = [];\nif (process.env.NODE_ENV !== 'production') {\n\t// development or test\n\tconst { logger } = require('redux-logger');\n\tmiddlewares = [...middlewares, logger];\n}\nconst store = createStore(\n\treducers,\n\tcomposeWithDevTools(applyMiddleware(...middlewares))\n);\nexport default store;\n","import { Position, Toaster } from '@blueprintjs/core';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/datetime/lib/css/blueprint-datetime.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport 'animate.css';\nimport 'normalize.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/app/app';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nconst toaster = Toaster.create({\n\tposition: Position.TOP\n});\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App toaster={toaster} />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}